@startuml
participant par
note left of 张三 #00FF00
我的名字叫张三，
家里有房又有田。
谁知来了个李四，
从此生活大变样。
end note
actor act
boundary bou
control con
entity ent
database dat
par->act:to actor
par->bou:to boundary
par->ent:to entity
par->dat:to database

'/还可以在声明参与者对象的时候，通过as关键字来为对象赋予一个简单的别名，需要注意图中显示的字要用双引号引起来。除此之外，声明时还可以对对象的图案指定背景颜色

participant "我是今天第一次来使用plantuml的想试试长度"  as par1
actor act1 #FF0000
boundary bou1 #00FF00
control con1 #0000FF
entity en1 #FFFF00
database dat1 #00FFFF

par1->act1: to actor
par1->bou1: to  boundary
par1->con1: to control
par1->ent1: to entity
par1->dat1: to database

'/我们可以在箭头指向对象的时候，直接使用非声明的对象。并且，对于长句子，或者有特殊符号的字符串，可以使用双引号引起来。在箭头指向的语句中，也可以通过as关键字，为双引号定义的参与者对象设置别名。
张三->"tom()":hello
"tom()"->"你一定要幸福" as fan :hi
fan-->"tom()":how are you
'/箭头类型
autonumber
阴 -> 阳
阴 --> 阳
阴 ->x 阳
阴 -\ 阳
阴 -\\ 阳
阴 /-- 阳
阴 \\- 阳
阴 ->o 阳
阴 <-> 阳
阴 <--> 阳
阴 o<-->x 阳
'/箭头颜色
autonumber  12 2 "<b>(<u>###</u>)"
树木 -[#green]> 树林
树林 -[#00FF00]> 森林
树林 <[#red]-- 森林
树木 <[#FF0000]-- 树林
'/消息数字序号 很多时候，时序图消息太多，我们需要在消息上增加序号以理清先后顺序。在PlantUML中，我们可以使用autonumber关键字，就可以自动为消息加上数字序号。
autonumber 12 2 "<font color=red>number #"
张三1 -> 李四1:我要借钱
李四1 --> 张三1:借给你
张三1 -> 李四1:我要还钱
李四1 --> 张三1:收到欠款
'/标题
title 学习uml的日子
'/图标说明
legend center
这是一个借钱与还钱发生的故事。
故事发生在一个夜黑风高的晚上……
end legend

'/消息分组 为了让时序图消息更有逻辑性，我们常需要对消息进行分组框起来。在PlantUML中，可以使用一下关键字对消息进行分组：
       'alt/else
       'opt
       'loop
       'par
       'break
       'critical
       'group (后接需要显示的字符）
alt 借钱案例
张三2 -> 李四2 : 我也借钱

 loop 循环借钱100次
     group 成功案例
     李四2 --> 张三2 : 借给你
     end
     张三2 -> 李四2 : 我要还钱
     李四2 --> 张三2 : 收到欠款
 end
else 借钱失败
张三2 -> 李四2 : 我还要借钱
李四2 --> 张三2 : 不借了
end

张三4->李四4:我要借钱
note left : 我借钱肯定会还给你的！
李四4->张三4:借给你啊
note right : 我相信你会还给我钱的！
张三4->李四4: 我要还钱
note left
有借有还，
再借不难！
end note
李四4 --> 张三4 : 收到欠款
note right: 有诚信！
张三4 -> 李四4 : 我还要借钱
李四4 --> 张三4 : 不借了
note over 张三: 谁敢比我惨~~~
rnote left of 张三 #00FF00
我的名字叫张三，
家里有房又有田。
谁知来了个李四，
从此生活大变样。
end note


hnote left of 张三 #00FF00
我的名字叫张三，
家里有房又有田。
谁知来了个李四，
从此生活大变样。
end note




@enduml